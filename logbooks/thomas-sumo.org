#+TITLE: CIL4SYS
#+INCLUDE: "./nova-print/doctype-memo.org"
{{{subtitle(Sumo Logbook)}}}
{{{theme-color(5b254e)}}}
 
* Introduction

This document details my findings w.r.t. the Sumo python API allowing to control traffic lights and vehicules. We first detail controlling of traffic lights before showing how vehicle speed control can be achieved.

The Python API is available [[http://www.sumo.dlr.de/daily/pydoc/traci.html][here]].

* Installation
  
** Ubuntu

#+BEGIN_SRC bash
sudo apt-get install sumo sumo-tools sumo-doc
#+END_SRC

** Archlinux

#+BEGIN_SRC bash
yay -S sumo
#+END_SRC

* Traffic light control

This section is inspired from this official [[http://sumo.dlr.de/wiki/Tutorials/TraCI4Traffic_Lights][tutorial]]. Its code is avaible at [[https://github.com/eclipse/sumo/blob/master/tests/complex/tutorial/traci_tls/][SUMO_HOME/tests/complex/tutorial/traci_tls/]].

** Imports

#+BEGIN_SRC python :session sumo
from __future__ import absolute_import
from __future__ import print_function

import os
import sys
import optparse
import random

# we need to import python modules from the $SUMO_HOME/tools directory
if 'SUMO_HOME' in os.environ:
    tools = os.path.join(os.environ['SUMO_HOME'], 'tools')
    sys.path.append(tools)
else:
    sys.exit("please declare environment variable 'SUMO_HOME'")

from sumolib import checkBinary  # noqa
import traci  # noqa
#+END_SRC

** Generate route file

#+BEGIN_SRC python
def generate_routefile():
    random.seed(42)  # make tests reproducible
    N = 3600  # number of time steps
    # demand per second from different directions
    pWE = 1. / 10
    pEW = 1. / 11
    pNS = 1. / 30
    with open("data/cross.rou.xml", "w") as routes:
        print("""<routes>
        <vType id="typeWE" accel="0.8" decel="4.5" sigma="0.5" length="5" minGap="2.5" maxSpeed="16.67" guiShape="passenger"/>
        <vType id="typeNS" accel="0.8" decel="4.5" sigma="0.5" length="7" minGap="3" maxSpeed="25" guiShape="bus"/>

        <route id="right" edges="51o 1i 2o 52i" />
        <route id="left" edges="52o 2i 1o 51i" />
        <route id="down" edges="54o 4i 3o 53i" />""", file=routes)
        vehNr = 0
        for i in range(N):
            if random.uniform(0, 1) < pWE:
                print('    <vehicle id="right_%i" type="typeWE" route="right" depart="%i" />' % (
                    vehNr, i), file=routes)
                vehNr += 1
            if random.uniform(0, 1) < pEW:
                print('    <vehicle id="left_%i" type="typeWE" route="left" depart="%i" />' % (
                    vehNr, i), file=routes)
                vehNr += 1
            if random.uniform(0, 1) < pNS:
                print('    <vehicle id="down_%i" type="typeNS" route="down" depart="%i" color="1,0,0"/>' % (
                    vehNr, i), file=routes)
                vehNr += 1
        print("</routes>", file=routes)
#+END_SRC

** Running the simulation

#+BEGIN_SRC python :session sumo
def run():
    """execute the TraCI control loop"""
    step = 0
    # we start with phase 2 where EW has green
    traci.trafficlight.setPhase("0", 2)
    while traci.simulation.getMinExpectedNumber() > 0:
        traci.simulationStep()
        if traci.trafficlight.getPhase("0") == 2:
            # we are not already switching
            if traci.inductionloop.getLastStepVehicleNumber("0") > 0:
                # there is a vehicle from the north, switch
                traci.trafficlight.setPhase("0", 3)
            else:
                # otherwise try to keep green for EW
                traci.trafficlight.setPhase("0", 2)
        step += 1
    traci.close()
    sys.stdout.flush()
#+END_SRC

Quick links to the official documentation:

- [[http://www.sumo.dlr.de/daily/pydoc/traci._trafficlight.html][traci.trafficLight]]
  - [[http://www.sumo.dlr.de/daily/pydoc/traci._trafficlight.html#TrafficLightDomain-setPhase][traci.trafficLight.setPhase]]
- [[http://www.sumo.dlr.de/daily/pydoc/traci._simulation.html][traci.simulation]]
- [[http://www.sumo.dlr.de/daily/pydoc/traci._inductionloop.html][traci.inductionloop]]
- [[http://www.sumo.dlr.de/daily/pydoc/traci._vehicle.html][traci.vehicle]]
  + [[http://www.sumo.dlr.de/daily/pydoc/traci._vehicle.html#VehicleDomain-setSpeed][traci.vehicule.setSpeed]]
